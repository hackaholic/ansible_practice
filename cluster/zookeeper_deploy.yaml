---

- hosts: zookeeper
  remote_user: root
  become: yes
  vars_files:
    - config/zookeeper_config.yaml

  tasks:
    - name: Check if zookeeper is already deployed
      stat: 
        path:  "{{ zookeeper_deploy_dir }}/{{ kafka_version }}"
      register: zookeeper_deploy_status

    - name: Deploying Zookeeper
      copy:
        src: "{{ zookeeper_download_dir }}"
        dest: "{{ zookeeper_deploy_dir }}"
        mode: u=rwx
      when: not zookeeper_deploy_status.stat.exists
      notify:
        - Deploy zookeeper config
        - Start zookeeper

    - name: list zookeeper process
      shell:
        cmd: ps aux | grep zookeeper.properties
      register: zookeeper_process

    - name: Start zookeeper if not running
      command: ls
      when: zookeeper_process.stdout is not search("QuorumPeerMain")
      notify:
        - Start zookeeper

    - name: Detect Config change in zookeeper
      template:
        src: template/zookeeper.j2
        dest: "{{ zookeeper_deploy_dir}}/{{ kafka_version }}/config/zookeeper.properties"
      register: zookeeper_config_change

    - name: Restart zookeeper server if config changes
      shell:
        chdir: "{{ zookeeper_deploy_dir }}/{{ kafka_version }}"
        cmd: bin/zookeeper-server-stop.sh
      when: zookeeper_config_change.changed
      notify:
        - Start zookeeper
      
  
  handlers:
    - name: Deploy zookeeper config
      template:
        src: template/zookeeper.j2
        dest: "{{ zookeeper_deploy_dir }}/{{ kafka_version }}/config/zookeeper.properties"
    
    - name: Start zookeeper
      shell:
        chdir: "{{ zookeeper_deploy_dir }}/{{ kafka_version }}"
        cmd: bin/zookeeper-server-start.sh -daemon config/zookeeper.properties
